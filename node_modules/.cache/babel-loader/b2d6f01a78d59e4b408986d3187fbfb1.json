{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/App.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Home from \"./components/home.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport SecuredRoute from \"./components/securedroute.component\";\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.handleLogout = () => {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:5000/logout\"\n      }).then(res => console.log(\"Logge out\")).catch(err => \"log out failed\");\n      setLogIn(\"NOT_LOGGED_IN\");\n      setUser({});\n    };\n\n    this.checkLoginStatus = () => {\n      axios.get(\"http://localhost:5000/user\", {\n        withCredentials: true\n      }).then(res => {\n        if (res.data.status === \"Logged In\" && isLoggedIn === \"NOT_LOGGED_IN\") {\n          setLogIn(\"LOGGED_IN\");\n          setUser(res.data.user.username);\n        } else if (res.data.status === \"Logged Out\" && isLoggedIn === \"LOGGED_IN\") {\n          setLogIn(\"NOT_LOGGED_IN\");\n          setUser({});\n        }\n      }).catch(err => console.log(err));\n      setLoading(false);\n    };\n\n    this.state = {\n      isLoggedIn: \"NOT_LOGGED_IN\",\n      user: \"\"\n    };\n    this.checkLoginStatus = this.checkLoginStatus.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.checkLoginStatus = this.checkLoginStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n\n  componentDidUpdate() {\n    this.checkLoginStatus();\n  }\n\n  handleLogin(data) {\n    setLogIn(\"LOGGED_IN\");\n    setUser(data.user.username);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SecuredRoute, {\n      path: \"/dashboard\",\n      exact: true,\n      loggedInStatus: isLoggedIn,\n      handleLogin: handleLogin,\n      handleLogout: handleLogout,\n      user: user,\n      component: Dashboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n        user: user,\n        loggedInStatus: isLoggedIn,\n        handleLogin: handleLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/App.js"],"names":["React","useState","useEffect","Component","BrowserRouter","Router","Route","useHistory","Redirect","axios","Home","Dashboard","SecuredRoute","App","constructor","handleLogout","method","withCredentials","url","then","res","console","log","catch","err","setLogIn","setUser","checkLoginStatus","get","data","status","isLoggedIn","user","username","setLoading","state","bind","handleLogin","componentDidMount","componentDidUpdate","render","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport Home from \"./components/home.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport SecuredRoute from \"./components/securedroute.component\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: \"NOT_LOGGED_IN\",\n      user: \"\",\n    };\n    this.checkLoginStatus = this.checkLoginStatus.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.checkLoginStatus = this.checkLoginStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n\n  componentDidUpdate() {\n    this.checkLoginStatus();\n  }\n\n  handleLogin(data) {\n    setLogIn(\"LOGGED_IN\");\n    setUser(data.user.username);\n  }\n\n  handleLogout = () => {\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/logout\",\n    })\n      .then((res) => console.log(\"Logge out\"))\n      .catch((err) => \"log out failed\");\n    setLogIn(\"NOT_LOGGED_IN\");\n    setUser({});\n  };\n\n  checkLoginStatus = () => {\n    axios\n      .get(\"http://localhost:5000/user\", { withCredentials: true })\n      .then((res) => {\n        if (res.data.status === \"Logged In\" && isLoggedIn === \"NOT_LOGGED_IN\") {\n          setLogIn(\"LOGGED_IN\");\n          setUser(res.data.user.username);\n        } else if (\n          res.data.status === \"Logged Out\" &&\n          isLoggedIn === \"LOGGED_IN\"\n        ) {\n          setLogIn(\"NOT_LOGGED_IN\");\n          setUser({});\n        }\n      })\n      .catch((err) => console.log(err));\n    setLoading(false);\n  };\n\n  render() {\n    return (\n      <Router>\n        <SecuredRoute\n          path={\"/dashboard\"}\n          exact\n          loggedInStatus={isLoggedIn}\n          handleLogin={handleLogin}\n          handleLogout={handleLogout}\n          user={user}\n          component={Dashboard}\n        />\n        <Route\n          path={\"/\"}\n          exact\n          render={(props) => (\n            <Home\n              {...props}\n              user={user}\n              loggedInStatus={isLoggedIn}\n              handleLogin={handleLogin}\n            />\n          )}\n        />\n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}