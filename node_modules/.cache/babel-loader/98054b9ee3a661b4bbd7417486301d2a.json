{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/habittracker/habit-tracker/src/components/privateroute.component.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // Add your own authentication on the below line.\n  const userLoggedIn = axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"http://localhost:5000/user\"\n  }).then(res => {\n    console.log(\"USERNAME \" + res.username);\n    return res.username;\n  });\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => userLoggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/claire/Desktop/habittracker/habit-tracker/src/components/privateroute.component.js"],"names":["React","axios","Redirect","Route","PrivateRoute","component","Component","rest","userLoggedIn","method","withCredentials","url","then","res","console","log","username","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D;AACA,QAAMC,YAAY,GAAGP,KAAK,CAAC;AACzBQ,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,eAAe,EAAE,IAFQ;AAGzBC,IAAAA,GAAG,EAAE;AAHoB,GAAD,CAAL,CAIlBC,IAJkB,CAIZC,GAAD,IAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,GAAG,CAACG,QAA9B;AACA,WAAOH,GAAG,CAACG,QAAX;AACD,GAPoB,CAArB;AASA,sBACE,oBAAC,KAAD,oBACMT,IADN;AAEE,IAAA,MAAM,EAAGU,KAAD,IACNT,YAAY,gBACV,oBAAC,SAAD,oBAAeS,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADU,gBAGV,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAzBD;;AA2BA,eAAejB,YAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  // Add your own authentication on the below line.\n  const userLoggedIn = axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"http://localhost:5000/user\",\n  }).then((res) => {\n    console.log(\"USERNAME \" + res.username);\n    return res.username;\n  });\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        userLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}