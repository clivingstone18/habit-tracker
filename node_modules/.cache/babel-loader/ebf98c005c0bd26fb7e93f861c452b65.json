{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Home from \"./components/home.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport SecuredRoute from \"./components/securedroute.component\";\nexport default function App() {\n  const getLoginStatus = () => {\n    axios.get(\"http://localhost:3000/user\", {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.status === \"Logged In\") {\n        return \"LOGGED_IN\";\n      } else if (res.data.status === \"Logged Out\" && isLoggedIn === \"LOGGED_IN\") {\n        return \"NOT_LOGGED_IN\";\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const [isLoggedIn, setLogIn] = useState(getLoginStatus());\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    checkLoginStatus();\n  }, [isLoggedIn]);\n\n  const handleLogin = data => {\n    setLogIn(\"LOGGED_IN\");\n    setUser(data.user);\n  };\n\n  const handleLogout = () => {\n    setLogIn(\"NOT_LOGGED_IN\");\n    setUser({});\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/logout\"\n    }).then(res => {});\n  };\n\n  const checkLoginStatus = () => {\n    axios.get(\"http://localhost:3000/user\", {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.status === \"Logged In\") {\n        handleLogin(res.data);\n      } else if (res.data.status === \"Logged Out\" && isLoggedIn === \"LOGGED_IN\") {\n        setLogIn(\"NOT_LOGGED_IN\");\n        setUser({});\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SecuredRoute, {\n    path: \"/dashboard\",\n    exact: true,\n    loggedInStatus: isLoggedIn,\n    handleLogin: handleLogin,\n    handleLogout: handleLogout,\n    user: user,\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n      loggedInStatus: isLoggedIn,\n      handleLogin: handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","useHistory","Redirect","axios","Home","Dashboard","SecuredRoute","App","getLoginStatus","get","withCredentials","then","res","data","status","isLoggedIn","catch","err","console","log","setLogIn","user","setUser","checkLoginStatus","handleLogin","handleLogout","method","url","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport Home from \"./components/home.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport SecuredRoute from \"./components/securedroute.component\";\n\nexport default function App() {\n  const getLoginStatus = () => {\n    axios\n      .get(\"http://localhost:3000/user\", { withCredentials: true })\n      .then((res) => {\n        if (res.data.status === \"Logged In\") {\n          return \"LOGGED_IN\";\n        } else if (\n          res.data.status === \"Logged Out\" &&\n          isLoggedIn === \"LOGGED_IN\"\n        ) {\n          return \"NOT_LOGGED_IN\";\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const [isLoggedIn, setLogIn] = useState(getLoginStatus());\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    checkLoginStatus();\n  }, [isLoggedIn]);\n\n  const handleLogin = (data) => {\n    setLogIn(\"LOGGED_IN\");\n    setUser(data.user);\n  };\n\n  const handleLogout = () => {\n    setLogIn(\"NOT_LOGGED_IN\");\n    setUser({});\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/logout\",\n    }).then((res) => {});\n  };\n\n  const checkLoginStatus = () => {\n    axios\n      .get(\"http://localhost:3000/user\", { withCredentials: true })\n      .then((res) => {\n        if (res.data.status === \"Logged In\") {\n          handleLogin(res.data);\n        } else if (\n          res.data.status === \"Logged Out\" &&\n          isLoggedIn === \"LOGGED_IN\"\n        ) {\n          setLogIn(\"NOT_LOGGED_IN\");\n          setUser({});\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <Router>\n      <SecuredRoute\n        path={\"/dashboard\"}\n        exact\n        loggedInStatus={isLoggedIn}\n        handleLogin={handleLogin}\n        handleLogout={handleLogout}\n        user={user}\n        component={Dashboard}\n      />\n      <Route\n        path={\"/\"}\n        exact\n        render={(props) => (\n          <Home\n            {...props}\n            loggedInStatus={isLoggedIn}\n            handleLogin={handleLogin}\n          />\n        )}\n      />\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}