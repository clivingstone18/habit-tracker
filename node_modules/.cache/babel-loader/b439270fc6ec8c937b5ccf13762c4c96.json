{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/habits-list.component.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Habit from \"../components/Habit.component\";\n\nconst HabitsList = props => {\n  function deleteHabit(id) {\n    axios.delete(\"http://localhost:5000/habits/\" + id).then(res => {\n      props.updateHabitArray(props.habits.filter(habit => habit._id !== id));\n    });\n  }\n\n  function sendUpdateRequest(habit) {\n    axios.post(\"http://localhost:5000/habits/update/\" + habit._id, habit).then(res => {\n      let newArray = props.habits.map(previousHabit => previousHabit._id === res.data._id ? res.data : previousHabit);\n      props.updateHabitArray(newArray);\n    }).catch(err => console.log(err));\n  }\n\n  function notCheckedYet(habit) {\n    if (habit.datesCompleted.length === 0) return true;\n    return habit.datesCompleted.length === 0 || habit.datesCompleted[habit.datesCompleted.length - 1].date.toString().substring(0, 10) !== new Date().toISOString().substring(0, 10);\n  }\n\n  function updateHabitStatus(habit) {\n    //Handles the toggle\n    if (notCheckedYet(habit)) {\n      habit.datesCompleted.push({\n        date: new Date().toISOString(),\n        completed: true\n      });\n    } else {\n      console.log(\"slicing!\");\n      habit.datesCompleted = habit.datesCompleted.slice(0, -1);\n    }\n\n    sendUpdateRequest(habit);\n  }\n\n  function addUncompletedDates(habit) {\n    const todaysDate = Date.parse(new Date());\n    const lastDayCompleted = habit.datesCompleted[habit.datesCompleted.length - 1].date.substring(0, 10);\n    let daysSinceCompleted = Math.floor((todaysDate - Date.parse(habit.datesCompleted[habit.datesCompleted.length - 1].date)) / (1000 * 60 * 60 * 24));\n    let i = daysSinceCompleted;\n\n    while (i > 0) {\n      if (new Date(todaysDate - 864e5 * i).toISOString().substring(0, 10) !== lastDayCompleted) {\n        habit.datesCompleted.push({\n          date: new Date(todaysDate - 864e5 * i).toISOString(),\n          completed: false\n        });\n      }\n\n      i--;\n    }\n\n    sendUpdateRequest(habit);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"habitsList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Up for today!\"), props.habits.filter(habit => notCheckedYet(habit)).map(habit => /*#__PURE__*/React.createElement(Habit, {\n    habit: habit,\n    deleteHabit: deleteHabit,\n    updateHabitStatus: updateHabitStatus,\n    updateHabitArray: props.updateHabitArray,\n    addUncompletedDates: addUncompletedDates,\n    notCheckedYet: notCheckedYet,\n    key: habit._id,\n    sendUpdateRequest: sendUpdateRequest,\n    editing: props.editing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Already completed\"), props.habits.filter(habit => !notCheckedYet(habit)).map(habit => /*#__PURE__*/React.createElement(Habit, {\n    habit: habit,\n    deleteHabit: deleteHabit,\n    updateHabitStatus: updateHabitStatus,\n    updateHabitArray: props.updateHabitArray,\n    addUncompletedDates: addUncompletedDates,\n    notCheckedYet: notCheckedYet,\n    key: habit._id,\n    sendUpdateRequest: sendUpdateRequest,\n    editing: props.editing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default HabitsList;","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/habits-list.component.js"],"names":["React","axios","Habit","HabitsList","props","deleteHabit","id","delete","then","res","updateHabitArray","habits","filter","habit","_id","sendUpdateRequest","post","newArray","map","previousHabit","data","catch","err","console","log","notCheckedYet","datesCompleted","length","date","toString","substring","Date","toISOString","updateHabitStatus","push","completed","slice","addUncompletedDates","todaysDate","parse","lastDayCompleted","daysSinceCompleted","Math","floor","i","editing"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Habit from \"../components/Habit.component\";\n\nconst HabitsList = (props) => {\n  function deleteHabit(id) {\n    axios.delete(\"http://localhost:5000/habits/\" + id).then((res) => {\n      props.updateHabitArray(props.habits.filter((habit) => habit._id !== id));\n    });\n  }\n\n  function sendUpdateRequest(habit) {\n    axios\n      .post(\"http://localhost:5000/habits/update/\" + habit._id, habit)\n      .then((res) => {\n        let newArray = props.habits.map((previousHabit) =>\n          previousHabit._id === res.data._id ? res.data : previousHabit\n        );\n        props.updateHabitArray(newArray);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function notCheckedYet(habit) {\n    if (habit.datesCompleted.length === 0) return true;\n    return (\n      habit.datesCompleted.length === 0 ||\n      habit.datesCompleted[habit.datesCompleted.length - 1].date\n        .toString()\n        .substring(0, 10) !== new Date().toISOString().substring(0, 10)\n    );\n  }\n\n  function updateHabitStatus(habit) {\n    //Handles the toggle\n    if (notCheckedYet(habit)) {\n      habit.datesCompleted.push({\n        date: new Date().toISOString(),\n        completed: true,\n      });\n    } else {\n      console.log(\"slicing!\");\n      habit.datesCompleted = habit.datesCompleted.slice(0, -1);\n    }\n    sendUpdateRequest(habit);\n  }\n\n  function addUncompletedDates(habit) {\n    const todaysDate = Date.parse(new Date());\n    const lastDayCompleted = habit.datesCompleted[\n      habit.datesCompleted.length - 1\n    ].date.substring(0, 10);\n\n    let daysSinceCompleted = Math.floor(\n      (todaysDate -\n        Date.parse(\n          habit.datesCompleted[habit.datesCompleted.length - 1].date\n        )) /\n        (1000 * 60 * 60 * 24)\n    );\n    let i = daysSinceCompleted;\n\n    while (i > 0) {\n      if (\n        new Date(todaysDate - 864e5 * i).toISOString().substring(0, 10) !==\n        lastDayCompleted\n      ) {\n        habit.datesCompleted.push({\n          date: new Date(todaysDate - 864e5 * i).toISOString(),\n          completed: false,\n        });\n      }\n      i--;\n    }\n    sendUpdateRequest(habit);\n  }\n\n  return (\n    <div className=\"habitsList\">\n      <p>Up for today!</p>\n      {props.habits\n        .filter((habit) => notCheckedYet(habit))\n        .map((habit) => (\n          <Habit\n            habit={habit}\n            deleteHabit={deleteHabit}\n            updateHabitStatus={updateHabitStatus}\n            updateHabitArray={props.updateHabitArray}\n            addUncompletedDates={addUncompletedDates}\n            notCheckedYet={notCheckedYet}\n            key={habit._id}\n            sendUpdateRequest={sendUpdateRequest}\n            editing={props.editing}\n          />\n        ))}\n      <p>Already completed</p>\n      {props.habits\n        .filter((habit) => !notCheckedYet(habit))\n        .map((habit) => (\n          <Habit\n            habit={habit}\n            deleteHabit={deleteHabit}\n            updateHabitStatus={updateHabitStatus}\n            updateHabitArray={props.updateHabitArray}\n            addUncompletedDates={addUncompletedDates}\n            notCheckedYet={notCheckedYet}\n            key={habit._id}\n            sendUpdateRequest={sendUpdateRequest}\n            editing={props.editing}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default HabitsList;\n"]},"metadata":{},"sourceType":"module"}