{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/securedroute.component.js\";\nimport React from \"react\";\nimport { BrowserRouter as Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nfunction SecuredRoute({\n  component: Component,\n  ...rest\n}) {\n  if (rest) return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => rest.loggedInStatus === \"LOGGED_IN\" ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SecuredRoute;","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/securedroute.component.js"],"names":["React","BrowserRouter","Route","Redirect","SecuredRoute","component","Component","rest","props","loggedInStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,KAA1B,QAAuC,kBAAvC;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AACvD,MAAIA,IAAJ,EACE,oBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACND,IAAI,CAACE,cAAL,KAAwB,WAAxB,gBACE,oBAAC,SAAD,oBAAeD,KAAf,EAA0BD,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,gBAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYH;;AAED,eAAeH,YAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nfunction SecuredRoute({ component: Component, ...rest }) {\n  if (rest)\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          rest.loggedInStatus === \"LOGGED_IN\" ? (\n            <Component {...props} {...rest} />\n          ) : (\n            <Redirect to=\"/\" />\n          )\n        }\n      />\n    );\n}\n\nexport default SecuredRoute;\n"]},"metadata":{},"sourceType":"module"}