{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/Habit.component.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Habit = props => {\n  const [isEditing, setEditing] = useState(false);\n  const [updatedHabit, setUpdatedHabit] = useState(\"\");\n  const [duration, setDuration] = useState(0);\n  const [checked, setChecked] = props.notCheckedYet(props.habit);\n  const habit = props.habit;\n  useEffect(() => {\n    //Checks whether the habit has been completed or not\n    if (!habit.datesCompleted.length) {\n      return;\n    }\n\n    props.addUncompletedDates(habit);\n  }, []);\n\n  const handleClick = () => {\n    if (!isEditing) {\n      setUpdatedHabit(habit.name);\n      setEditing(!isEditing);\n      return;\n    }\n\n    const updatedHabit = {\n      name: updatedHabit,\n      duration: duration,\n      datesCompleted: habit.datesCompleted,\n      startDate: habit.startDate\n    };\n    axios.post(\"http://localhost:5000/habits/update/\" + habit._id, updatedHabit).then(res => {\n      props.updateHabitsList(res.data);\n      setEditing(!isEditing);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, isEditing ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: habit,\n    onChange: e => setUpdatedHabit(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: duration,\n    onChange: e => setDuration(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Save\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, habit.duration), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, habit.streak), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, habit.longestStreak), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, habit.percentCompliance, \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      props.deleteHabit(props.habit._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: () => {\n      props.updateHabitStatus(habit);\n      setChecked(props.notCheckedYet(props.habit));\n    },\n    checked: checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Habit;","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/Habit.component.js"],"names":["React","useEffect","useState","axios","Habit","props","isEditing","setEditing","updatedHabit","setUpdatedHabit","duration","setDuration","checked","setChecked","notCheckedYet","habit","datesCompleted","length","addUncompletedDates","handleClick","name","startDate","post","_id","then","res","updateHabitsList","data","e","target","value","streak","longestStreak","percentCompliance","deleteHabit","updateHabitStatus"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Habit = (props) => {\n  const [isEditing, setEditing] = useState(false);\n  const [updatedHabit, setUpdatedHabit] = useState(\"\");\n  const [duration, setDuration] = useState(0);\n  const [checked, setChecked] = props.notCheckedYet(props.habit);\n\n  const habit = props.habit;\n\n  useEffect(() => {\n    //Checks whether the habit has been completed or not\n    if (!habit.datesCompleted.length) {\n      return;\n    }\n    props.addUncompletedDates(habit);\n  }, []);\n\n  const handleClick = () => {\n    if (!isEditing) {\n      setUpdatedHabit(habit.name);\n      setEditing(!isEditing);\n      return;\n    }\n    const updatedHabit = {\n      name: updatedHabit,\n      duration: duration,\n      datesCompleted: habit.datesCompleted,\n      startDate: habit.startDate,\n    };\n    axios\n      .post(\"http://localhost:5000/habits/update/\" + habit._id, updatedHabit)\n      .then((res) => {\n        props.updateHabitsList(res.data);\n        setEditing(!isEditing);\n      });\n  };\n\n  return (\n    <tr>\n      {isEditing ? (\n        <>\n          <input\n            type=\"text\"\n            value={habit}\n            onChange={(e) => setUpdatedHabit(e.target.value)}\n          />\n\n          <input\n            type=\"text\"\n            value={duration}\n            onChange={(e) => setDuration(e.target.value)}\n          />\n          <button onClick={handleClick}>Save</button>\n        </>\n      ) : (\n        <>\n          <td>{habit.name}</td>\n          <td>{habit.duration}</td>\n          <td>{habit.streak}</td>\n          <td>{habit.longestStreak}</td>\n          <td>{habit.percentCompliance}%</td>\n\n          <td>\n            <button onClick={handleClick}>Edit</button>\n            <button\n              onClick={() => {\n                props.deleteHabit(props.habit._id);\n              }}\n            >\n              Delete\n            </button>\n            <input\n              type=\"checkbox\"\n              onClick={() => {\n                props.updateHabitStatus(habit);\n                setChecked(props.notCheckedYet(props.habit));\n              }}\n              checked={checked}\n            />\n          </td>\n        </>\n      )}\n    </tr>\n  );\n};\n\nexport default Habit;\n"]},"metadata":{},"sourceType":"module"}