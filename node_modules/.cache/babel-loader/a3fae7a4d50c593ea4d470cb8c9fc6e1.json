{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Home from \"./components/home.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport SecuredRoute from \"./components/securedroute.component\";\nexport default function App() {\n  const [isLoggedIn, setLogIn] = useState(\"NOT_LOGGED_IN\");\n  const [isLoading, setLoading] = useState(true);\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n\n  const handleLogin = data => {\n    setLogIn(\"LOGGED_IN\");\n    setUser(data.user.username);\n  };\n\n  const handleLogout = () => {\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/logout\"\n    }).then(res => {\n      setLogIn(\"NOT_LOGGED_IN\");\n      setUser(\"\");\n      setLoading(true);\n    }).catch(err => console.log(\"Logout failed, try again!\"));\n  };\n\n  const checkLoginStatus = () => {\n    console.log(\"setting state\");\n    axios.get(\"http://localhost:5000/user\", {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.status === \"Logged In\" && isLoggedIn === \"NOT_LOGGED_IN\") {\n        handleLogin(res.data);\n        setLoading(false);\n      } else if (res.data.status === \"Logged Out\" && isLoggedIn === \"LOGGED_IN\") {\n        setLogIn(\"NOT_LOGGED_IN\");\n        setUser(\"\");\n        setLoading(false);\n      }\n\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SecuredRoute, {\n      path: \"/dashboard\",\n      exact: true,\n      loggedInStatus: isLoggedIn,\n      handleLogin: handleLogin,\n      handleLogout: handleLogout,\n      checkLoginStatus: checkLoginStatus,\n      component: Dashboard,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n        user: user,\n        checkLoginStatus: checkLoginStatus,\n        handleLogin: handleLogin,\n        isLoggedIn: isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","axios","Home","Dashboard","SecuredRoute","App","isLoggedIn","setLogIn","isLoading","setLoading","user","setUser","checkLoginStatus","handleLogin","data","username","handleLogout","method","withCredentials","url","then","res","catch","err","console","log","get","status","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport Home from \"./components/home.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport SecuredRoute from \"./components/securedroute.component\";\n\nexport default function App() {\n  const [isLoggedIn, setLogIn] = useState(\"NOT_LOGGED_IN\");\n  const [isLoading, setLoading] = useState(true);\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n\n  const handleLogin = (data) => {\n    setLogIn(\"LOGGED_IN\");\n    setUser(data.user.username);\n  };\n\n  const handleLogout = () => {\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/logout\",\n    })\n      .then((res) => {\n        setLogIn(\"NOT_LOGGED_IN\");\n        setUser(\"\");\n        setLoading(true);\n      })\n      .catch((err) => console.log(\"Logout failed, try again!\"));\n  };\n\n  const checkLoginStatus = () => {\n    console.log(\"setting state\");\n    axios\n      .get(\"http://localhost:5000/user\", { withCredentials: true })\n      .then((res) => {\n        if (res.data.status === \"Logged In\" && isLoggedIn === \"NOT_LOGGED_IN\") {\n          handleLogin(res.data);\n          setLoading(false);\n        } else if (\n          res.data.status === \"Logged Out\" &&\n          isLoggedIn === \"LOGGED_IN\"\n        ) {\n          setLogIn(\"NOT_LOGGED_IN\");\n          setUser(\"\");\n          setLoading(false);\n        }\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  } else {\n    return (\n      <Router>\n        <SecuredRoute\n          path={\"/dashboard\"}\n          exact\n          loggedInStatus={isLoggedIn}\n          handleLogin={handleLogin}\n          handleLogout={handleLogout}\n          checkLoginStatus={checkLoginStatus}\n          component={Dashboard}\n          user={user}\n        />\n\n        <Route\n          path={\"/\"}\n          exact\n          render={(props) => (\n            <Home\n              {...props}\n              user={user}\n              checkLoginStatus={checkLoginStatus}\n              handleLogin={handleLogin}\n              isLoggedIn={isLoggedIn}\n            />\n          )}\n        />\n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}