{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/habits-list.component.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Habit from \"../components/Habit.component\";\n\nconst HabitsList = props => {\n  function deleteHabit(id) {\n    axios.delete(\"http://localhost:5000/habits/\" + id).then(res => {\n      props.setHabits(props.habits.filter(habit => habit._id !== id));\n    });\n  }\n\n  function sameDay(habit) {\n    return habit.datesCompleted.length === 0 || habit.datesCompleted[habit.datesCompleted.length - 1].date.substring(0, 10) === new Date().toISOString().substring(0, 10);\n  }\n\n  function updateHabitStatus(habit) {\n    //Checks if dates are being repeated\n    if (habit.datesCompleted.length >= 1) {\n      const date1 = habit.datesCompleted[habit.datesCompleted.length - 1].date.substring(0, 10);\n      const date2 = new Date().toISOString().substring(0, 10);\n\n      if (date1 === date2) {\n        habit.datesCompleted = habit.datesCompleted.slice(0, -1);\n      }\n    } else {\n      habit.datesCompleted.push({\n        date: new Date(),\n        completed: true\n      });\n    }\n\n    axios.post(\"http://localhost:5000/habits/update/\" + habit._id, habit).then(res => {\n      props.updateHabit(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Duration\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Streak\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Longest Streak\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Compliance \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, props.habits.map(habit => /*#__PURE__*/React.createElement(Habit, {\n    habit: habit,\n    deleteHabit: deleteHabit,\n    updateHabitStatus: updateHabitStatus,\n    key: habit._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default HabitsList;","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/habits-list.component.js"],"names":["React","Component","axios","Habit","HabitsList","props","deleteHabit","id","delete","then","res","setHabits","habits","filter","habit","_id","sameDay","datesCompleted","length","date","substring","Date","toISOString","updateHabitStatus","date1","date2","slice","push","completed","post","updateHabit","data","catch","err","console","log","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Habit from \"../components/Habit.component\";\n\nconst HabitsList = (props) => {\n  function deleteHabit(id) {\n    axios.delete(\"http://localhost:5000/habits/\" + id).then((res) => {\n      props.setHabits(props.habits.filter((habit) => habit._id !== id));\n    });\n  }\n\n  function sameDay(habit) {\n    return (\n      habit.datesCompleted.length === 0 ||\n      habit.datesCompleted[habit.datesCompleted.length - 1].date.substring(\n        0,\n        10\n      ) === new Date().toISOString().substring(0, 10)\n    );\n  }\n\n  function updateHabitStatus(habit) {\n    //Checks if dates are being repeated\n    if (habit.datesCompleted.length >= 1) {\n      const date1 = habit.datesCompleted[\n        habit.datesCompleted.length - 1\n      ].date.substring(0, 10);\n      const date2 = new Date().toISOString().substring(0, 10);\n\n      if (date1 === date2) {\n        habit.datesCompleted = habit.datesCompleted.slice(0, -1);\n      }\n    } else {\n      habit.datesCompleted.push({\n        date: new Date(),\n        completed: true,\n      });\n    }\n    axios\n      .post(\"http://localhost:5000/habits/update/\" + habit._id, habit)\n      .then((res) => {\n        props.updateHabit(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"container\">\n      <table>\n        <thead>\n          <tr>\n            <td>Name</td>\n            <td>Duration</td>\n            <td>Streak</td>\n            <td>Longest Streak</td>\n            <td>Compliance </td>\n            <td>Actions</td>\n          </tr>\n        </thead>\n        <tbody>\n          {props.habits.map((habit) => (\n            <Habit\n              habit={habit}\n              deleteHabit={deleteHabit}\n              updateHabitStatus={updateHabitStatus}\n              key={habit._id}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HabitsList;\n"]},"metadata":{},"sourceType":"module"}