{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/dashboard.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CreateHabit from \"./create-habit.component\";\nimport HabitsList from \"./habits-list.component\";\nimport Button from \"./button.component\";\nimport \"../dashboard.css\";\nexport default function Dashboard(props) {\n  const [habits, setHabits] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAdding, setIsAdding] = useState(false); // Retrieves the name of the user that is logged in and habits associated with their username\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/habits\", {\n      withCredentials: true\n    }).then(res => {\n      setHabits(res.data);\n      setIsLoading(false);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleLogoutClick() {\n    axios.get(\"http://localhost:5000/logout\", {\n      withCredentials: true\n    }).then(response => {\n      props.handleLogout();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  const addHabit = habit => {\n    setHabits(prevHabitArray => [...prevHabitArray, habit]);\n  };\n\n  const updateHabitArray = newHabitArray => {\n    setHabits(newHabitArray);\n  };\n\n  const handleClick = val => {\n    setIsAdding(val);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, \"Page is loading\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, props.user), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"# of Active Habits: \", habits.length), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogoutClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"habitsList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }\n  }, \" Please wait for habits to load! \") : null, habits.length ? /*#__PURE__*/React.createElement(HabitsList, {\n    habits: habits,\n    updateHabitArray: updateHabitArray,\n    isAdding: isAdding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"You haven't started adding habits yet!\"), isAdding ? /*#__PURE__*/React.createElement(CreateHabit, {\n    username: props.user,\n    habits: habits,\n    setHabits: addHabit,\n    setIsAdding: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleClick,\n    buttonText: \"+\",\n    status: isAdding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/components/dashboard.component.js"],"names":["React","useState","useEffect","axios","CreateHabit","HabitsList","Button","Dashboard","props","habits","setHabits","isLoading","setIsLoading","isAdding","setIsAdding","get","withCredentials","then","res","data","catch","err","console","log","handleLogoutClick","response","handleLogout","error","addHabit","habit","prevHabitArray","updateHabitArray","newHabitArray","handleClick","val","user","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAO,kBAAP;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC,CAHuC,CAKvC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFY,GADH,CACO,8BADP,EACuC;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KADvC,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbR,MAAAA,SAAS,CAACQ,GAAG,CAACC,IAAL,CAAT;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH,EAMGQ,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,WAASG,iBAAT,GAA6B;AAC3BrB,IAAAA,KAAK,CACFY,GADH,CACO,8BADP,EACuC;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KADvC,EAEGC,IAFH,CAESQ,QAAD,IAAc;AAClBjB,MAAAA,KAAK,CAACkB,YAAN;AACD,KAJH,EAKGN,KALH,CAKUO,KAAD,IAAW;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAPH;AAQD;;AAED,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BnB,IAAAA,SAAS,CAAEoB,cAAD,IAAoB,CAAC,GAAGA,cAAJ,EAAoBD,KAApB,CAArB,CAAT;AACD,GAFD;;AAIA,QAAME,gBAAgB,GAAIC,aAAD,IAAmB;AAC1CtB,IAAAA,SAAS,CAACsB,aAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3BpB,IAAAA,WAAW,CAACoB,GAAD,CAAX;AACD,GAFD;;AAIA,MAAIvB,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAAC2B,IAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAyB1B,MAAM,CAAC2B,MAAhC,CAFF,eAIE;AAAQ,IAAA,OAAO,EAAEZ,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,eAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAH,GAA8C,IAD1D,EAEGF,MAAM,CAAC2B,MAAP,gBACC,oBAAC,UAAD;AACE,IAAA,MAAM,EAAE3B,MADV;AAEE,IAAA,gBAAgB,EAAEsB,gBAFpB;AAGE,IAAA,QAAQ,EAAElB,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CATJ,EAWGA,QAAQ,gBACP,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEL,KAAK,CAAC2B,IADlB;AAEE,IAAA,MAAM,EAAE1B,MAFV;AAGE,IAAA,SAAS,EAAEmB,QAHb;AAIE,IAAA,WAAW,EAAEK,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAQP,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEA,WAArB;AAAkC,IAAA,UAAU,EAAC,GAA7C;AAAiD,IAAA,MAAM,EAAEpB,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CARF,CADF;AAiCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CreateHabit from \"./create-habit.component\";\nimport HabitsList from \"./habits-list.component\";\nimport Button from \"./button.component\";\nimport \"../dashboard.css\";\n\nexport default function Dashboard(props) {\n  const [habits, setHabits] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAdding, setIsAdding] = useState(false);\n\n  // Retrieves the name of the user that is logged in and habits associated with their username\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/habits\", { withCredentials: true })\n      .then((res) => {\n        setHabits(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleLogoutClick() {\n    axios\n      .get(\"http://localhost:5000/logout\", { withCredentials: true })\n      .then((response) => {\n        props.handleLogout();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  const addHabit = (habit) => {\n    setHabits((prevHabitArray) => [...prevHabitArray, habit]);\n  };\n\n  const updateHabitArray = (newHabitArray) => {\n    setHabits(newHabitArray);\n  };\n\n  const handleClick = (val) => {\n    setIsAdding(val);\n  };\n\n  if (isLoading) {\n    return <p>Page is loading</p>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"user\">\n        <h1>{props.user}</h1>\n        <h1># of Active Habits: {habits.length}</h1>\n\n        <button onClick={handleLogoutClick}>Logout</button>\n      </div>\n\n      <div className=\"habitsList\">\n        {isLoading ? <p> Please wait for habits to load! </p> : null}\n        {habits.length ? (\n          <HabitsList\n            habits={habits}\n            updateHabitArray={updateHabitArray}\n            isAdding={isAdding}\n          />\n        ) : (\n          <p>You haven't started adding habits yet!</p>\n        )}\n        {isAdding ? (\n          <CreateHabit\n            username={props.user}\n            habits={habits}\n            setHabits={addHabit}\n            setIsAdding={handleClick}\n          />\n        ) : (\n          <Button handleClick={handleClick} buttonText=\"+\" status={isAdding} />\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}