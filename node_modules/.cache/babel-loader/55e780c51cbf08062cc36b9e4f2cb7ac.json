{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Home from \"./components/home.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport SecuredRoute from \"./components/securedroute.component\";\nexport default function App() {\n  const [isLoggedIn, setLogIn] = useState(\"NOT_LOGGED_IN\");\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    checkLoginStatus();\n    console.log(isLoggedIn);\n  }, [isLoggedIn]);\n\n  const handleLogin = data => {\n    setLogIn(\"LOGGED_IN\");\n    setUser(data.user);\n    console.log(isLoggedIn);\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    setLogIn(\"NOT_LOGGED_IN\");\n    setUser({});\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/logout\"\n    }).then(res => {});\n  };\n\n  const checkLoginStatus = () => {\n    axios.get(\"http://localhost:3000/user\", {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.status === \"Logged In\") {\n        handleLogin(res.data);\n      } else if (res.data.status === \"Logged Out\" && isLoggedIn === \"LOGGED_IN\") {\n        setLogIn(\"NOT_LOGGED_IN\");\n        setUser({});\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n      loggedInStatus: isLoggedIn,\n      handleLogin: handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SecuredRoute, {\n    path: \"/dashboard\",\n    exact: true,\n    loggedInStatus: isLoggedIn,\n    handleLogin: handleLogin,\n    handleLogout: handleLogout,\n    user: user,\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/claire/Desktop/Projects/habittracker/habit-tracker/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Redirect","axios","Home","Dashboard","SecuredRoute","App","isLoggedIn","setLogIn","user","setUser","checkLoginStatus","console","log","handleLogin","data","handleLogout","method","withCredentials","url","then","res","get","status","catch","err","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport Home from \"./components/home.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport SecuredRoute from \"./components/securedroute.component\";\n\nexport default function App() {\n  const [isLoggedIn, setLogIn] = useState(\"NOT_LOGGED_IN\");\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    checkLoginStatus();\n    console.log(isLoggedIn);\n  }, [isLoggedIn]);\n\n  const handleLogin = (data) => {\n    setLogIn(\"LOGGED_IN\");\n    setUser(data.user);\n    console.log(isLoggedIn);\n    return <Redirect to=\"/dashboard\" />;\n  };\n\n  const handleLogout = () => {\n    setLogIn(\"NOT_LOGGED_IN\");\n    setUser({});\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/logout\",\n    }).then((res) => {});\n  };\n\n  const checkLoginStatus = () => {\n    axios\n      .get(\"http://localhost:3000/user\", { withCredentials: true })\n      .then((res) => {\n        if (res.data.status === \"Logged In\") {\n          handleLogin(res.data);\n        } else if (\n          res.data.status === \"Logged Out\" &&\n          isLoggedIn === \"LOGGED_IN\"\n        ) {\n          setLogIn(\"NOT_LOGGED_IN\");\n          setUser({});\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <Router>\n      <Route\n        path={\"/\"}\n        exact\n        render={(props) => (\n          <Home\n            {...props}\n            loggedInStatus={isLoggedIn}\n            handleLogin={handleLogin}\n          />\n        )}\n      />\n      <SecuredRoute\n        path={\"/dashboard\"}\n        exact\n        loggedInStatus={isLoggedIn}\n        handleLogin={handleLogin}\n        handleLogout={handleLogout}\n        user={user}\n        component={Dashboard}\n      />\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}